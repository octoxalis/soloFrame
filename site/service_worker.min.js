
var SWO_o={cache_s:"soloFrame_2",url_a:["https://soloframe.netlify.app/index.html","https://soloframe.netlify.app//assets/scripts/js/index.min.js"],install__v(t){SWO_o.cache_a=new Set(SWO_o.slots_a),t.waitUntil(void async function(){const t=await caches.open(SWO_o.cache_s);await t.addAll(SWO_o.url_a),self.skipWaiting()}())},activate__v(t){t.waitUntil(void async function(){const t=await caches.keys(),a=await t.filter((t=>t!==SWO_o.cache_s));await Promise.all(a.map((t=>caches.delete(t)))),self.clients.claim()}())},fetch__v(t){if("navigate"===t?.request?.mode)try{t.respondWith(async function(){const a=new URL(t.request.url),e=fetch(a),c=e.then((t=>t.clone()));return t.waitUntil(async function(){const t=await caches.open(SWO_o.cache_s);await t.put(a,await c)}()),await caches.match(a)||e}())}catch(t){const a=caches.open(SWO_o.cache_s);return a&&a.match(new Request("https://soloframe.netlify.app/offline.html"))}},init__v(){["install","activate","fetch"].forEach((t=>self.addEventListener(t,(a=>SWO_o[`${t}__v`](a)))))}};SWO_o.init__v();